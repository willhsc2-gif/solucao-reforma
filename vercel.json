{
  "$schema": "https://openapi.vercel.sh/vercel.json",
  "framework": "vite",
  "build": {
    "env": {
      "VITE_SUPABASE_URL": "@vite_supabase_url",
      "VITE_SUPABASE_ANON_KEY": "@vite_supabase_anon_key"
    }
  },
  "cleanUrls": true,
  "trailingSlash": false,
  "routes": [
    // 1. Explicitamente servir index.html com no-cache
    {
      "src": "/index.html",
      "headers": {
        "Cache-Control": "no-cache, no-store, must-revalidate",
        "Content-Type": "text/html"
      },
      "dest": "/index.html"
    },
    // 2. Servir bundles JS gerados pelo Vite com tipo MIME correto e cache imutável
    {
      "src": "/assets/index-([a-zA-Z0-9]+)\\.js",
      "headers": {
        "Content-Type": "application/javascript",
        "Cache-Control": "public, max-age=31536000, immutable"
      },
      "dest": "/assets/index-$1.js"
    },
    // 3. Servir bundles CSS gerados pelo Vite com tipo MIME correto e cache imutável
    {
      "src": "/assets/index-([a-zA-Z0-9]+)\\.css",
      "headers": {
        "Content-Type": "text/css",
        "Cache-Control": "public, max-age=31536000, immutable"
      },
      "dest": "/assets/index-$1.css"
    },
    // 4. Servir outros assets na pasta /assets (imagens, fontes, etc.) com cache imutável
    {
      "src": "/assets/(.*)",
      "headers": {
        "Cache-Control": "public, max-age=31536000, immutable"
      },
      "dest": "/assets/$1"
    },
    // 5. Servir ícones PNG com cache revalidável
    {
      "src": "/icons/(.*\\.png)",
      "headers": {
        "Content-Type": "image/png",
        "Cache-Control": "public, max-age=3600, must-revalidate"
      },
      "dest": "/icons/$1"
    },
    // 6. Servir favicon.png com cache revalidável
    {
      "src": "/favicon.png",
      "headers": {
        "Content-Type": "image/png",
        "Cache-Control": "public, max-age=3600, must-revalidate"
      },
      "dest": "/favicon.png"
    },
    // 7. Servir manifest.json com no-cache
    {
      "src": "/manifest.json",
      "headers": {
        "Content-Type": "application/manifest+json",
        "Cache-Control": "public, max-age=0, must-revalidate"
      },
      "dest": "/manifest.json"
    },
    // 8. Servir service-worker.js com no-cache
    {
      "src": "/service-worker.js",
      "headers": {
        "Content-Type": "application/javascript",
        "Cache-Control": "public, max-age=0, must-revalidate"
      },
      "dest": "/service-worker.js"
    },
    // 9. Servir outros arquivos estáticos na raiz
    {
      "src": "/robots.txt",
      "dest": "/robots.txt"
    },
    {
      "src": "/favicon.ico",
      "dest": "/favicon.ico"
    },
    // 10. Fallback SPA: todas as outras requisições vão para index.html
    {
      "src": "/(.*)",
      "dest": "/index.html"
    }
  ]
}